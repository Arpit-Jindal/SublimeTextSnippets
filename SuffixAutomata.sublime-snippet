<snippet>
	<content><![CDATA[
struct state
{
	int len, link, idx;
	map < char , int > next ;
} ;

const int MAXLEN = 30007 ;
state st [ MAXLEN * 2 ] ;
int sz, last ;

void sa_init ( )
{
	sz = last = 0 ;
	st [ 0 ] . len = 0 ;
	st [ 0 ] . link = - 1 ;
	st [0].idx = -1;
	++ sz ;
	for (int i = 0; i < MAXLEN * 2; ++i)
		st[i].next.clear();

}

void sa_extend ( char c , int id)
{
	int cur = sz ++ ;
	st [ cur ] . len = st [ last ] . len + 1 ;
	st [ cur ] . idx = id;
	int p ;
	for ( p = last ; p != - 1 && !st [ p ] . next . count ( c ) ; p = st [ p ] . link )
		st [ p ] . next [ c ] = cur ;
	if ( p == - 1 )
		st [ cur ] . link = 0 ;
	else
	{
		int q = st [ p ] . next [ c ] ;
		if ( st [ p ] . len + 1 == st [ q ] . len )
			st [ cur ] . link = q ;
		else
		{
			int clone = sz ++ ;
			st [ clone ] . len = st [ p ] . len + 1 ;
			st [ clone ] . idx = st [ q ] . idx ;
			st [ clone ] . next = st [ q ] . next ;
			st [ clone ] . link = st [ q ] . link ;
			for ( ; p != - 1 && st [ p ] . next [ c ] == q ; p = st [ p ] . link )
				st [ p ] . next [ c ] = clone ;
			st [ q ] . link = st [ cur ] . link = clone ;
		}
	}
	last = cur ;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>SuffixAutomata</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
	<scope>source.cpp</scope>
	<scope>source.c</scope>
</snippet>
